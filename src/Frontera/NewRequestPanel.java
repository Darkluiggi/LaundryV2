/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frontera;

import Control.ViewArticlesControl;
import Control.ViewRequestsControl;
import DAO.DAOArticle;
import DAO.DAOArticleRequest;
import DAO.DAOCabin;
import DAO.DAORequest;
import Entidad.Article;
import Entidad.ArticleRequest;
import Entidad.Cabin;
import Entidad.Request;
import static Frontera.ManageArticlePanel.GenderBox;
import Utils.BoxUtils;
import Utils.FormUtils;
import Utils.TableUtils;
import java.awt.event.ActionEvent;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.Locale;
import java.util.Objects;
import java.util.Set;
import java.util.function.Predicate;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListSelectionModel;

/**
 *
 * @author User
 */
public class NewRequestPanel extends javax.swing.JPanel {

    private DAOArticle daoT;
    private ArticleRequest artR;
    private DAOArticleRequest daoAR;
    private DAORequest daoR;
    private Article art;
    private Set<ArticleRequest> articleRequestsSet;
    private Hashtable<String, String[]> subItems = new Hashtable<String, String[]>();
    private Request request;
    private Cabin cabin;
    private DAOCabin daoC;
    private final Request editRequest;
    private ArticleRequest editArticleRequest;
    private double partialTotal;

    private boolean editMode;
    private boolean superEditMode;

    public NewRequestPanel() {
        this(null);
    }

    public NewRequestPanel(final Request r) {
        this.editRequest = r;
        initComponents();
        daoT = new DAOArticle();
        articleRequestsSet = new HashSet<>();
        daoAR = new DAOArticleRequest();
        daoR = new DAORequest();
        daoC = new DAOCabin();
        createRequestBtn.setEnabled(false);
        BoxUtils.updateBox(daoT.getGenders(), GenderBox);
        GenderBox.addActionListener((ev) -> {
            genderSelected(ev);
        });
        GenderBox.putClientProperty("JComboBox.isTableCellEditor", Boolean.TRUE);
        partialTotal = 0;
        editMode = false;
        if (editRequest != null) {
            this.CabinTF.setText(String.valueOf(r.getCabin().getId()));
            this.CabinTF.setEnabled(false);
            this.CabinTF.setEditable(false);
            articleRequestsSet = editRequest.getArticleSet();
            NumberFormat formatter = NumberFormat.getCurrencyInstance(Locale.US);
            this.totalLbl.setText(String.valueOf(formatter.format(editRequest.getTotal())));
            this.createRequestBtn.setText("Editar Solicitud");
            partialTotal = editRequest.getTotal();
            superEditMode = true;
        }

        TableUtils.fillTableArticleRequest(requestTable, r != null ? new ArrayList<>(articleRequestsSet) : Collections.emptyList());
    }

    private void genderSelected(ActionEvent evt) {
        String item = (String) GenderBox.getSelectedItem();
        BoxUtils.getArticlesbyGender(item, subItems);
        Object o = subItems.get(item);

        if (o == null) {
            ClothBox.setModel(new DefaultComboBoxModel());
        } else {
            ClothBox.setModel(new DefaultComboBoxModel((String[]) o));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        saveConfirmationDialog = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        cancelPrintButton = new javax.swing.JButton();
        savePrintButton = new javax.swing.JButton();
        saveFileChooser = new javax.swing.JFileChooser();
        confirmCreate = new javax.swing.JDialog();
        topDialog = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        centerDialog = new javax.swing.JPanel();
        IDNUsuarioLabel = new javax.swing.JLabel();
        labelID = new javax.swing.JLabel();
        labelNuevoUsuario = new javax.swing.JLabel();
        botDialog = new javax.swing.JPanel();
        AceptarBDialogo = new javax.swing.JButton();
        CancelarBDialogo = new javax.swing.JButton();
        confirmPrint = new javax.swing.JDialog();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        printButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        ExceptionField = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        GenderBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        washChk = new javax.swing.JCheckBox();
        ironChk = new javax.swing.JCheckBox();
        foldChk = new javax.swing.JCheckBox();
        clothL = new javax.swing.JLabel();
        ClothBox = new javax.swing.JComboBox<>();
        AddB = new javax.swing.JButton();
        CancelB = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        QuantityTF = new javax.swing.JTextField();
        ironWashChk = new javax.swing.JCheckBox();
        XpressChk = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        createRequestBtn = new javax.swing.JButton();
        cancelRequest = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        CabinTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        totalLbl = new javax.swing.JLabel();

        saveConfirmationDialog.setTitle("Confirmar guardado");
        saveConfirmationDialog.setBounds(new java.awt.Rectangle(300, 300, 300, 150));
        saveConfirmationDialog.setModal(true);
        saveConfirmationDialog.setResizable(false);
        saveConfirmationDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("<html>\n<pre>\nSe creará un arcchivo .txt\nSeleccione a continuación la dirección \nde guardado del archivo.\n</pre>\n</html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        saveConfirmationDialog.getContentPane().add(jLabel6, gridBagConstraints);

        cancelPrintButton.setText("Cancelar");
        cancelPrintButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        saveConfirmationDialog.getContentPane().add(cancelPrintButton, gridBagConstraints);

        savePrintButton.setText("Guardar");
        savePrintButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        saveConfirmationDialog.getContentPane().add(savePrintButton, gridBagConstraints);

        saveFileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        saveFileChooser.setApproveButtonToolTipText("save");
        saveFileChooser.setDialogTitle("Guardar");
        saveFileChooser.setFileFilter(null);
        saveFileChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        saveFileChooser.setSelectedFiles(null);

        confirmCreate.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        confirmCreate.setTitle("Confirmar: Nuevo Usuario");
        confirmCreate.setLocation(new java.awt.Point(0, 0));
        confirmCreate.setResizable(false);
        confirmCreate.setSize(new java.awt.Dimension(440, 240));

        topDialog.setLayout(new java.awt.GridLayout(1, 0));

        jLabel7.setText("Se creará una nueva solicitud de servicio");
        topDialog.add(jLabel7);

        confirmCreate.getContentPane().add(topDialog, java.awt.BorderLayout.NORTH);

        IDNUsuarioLabel.setText("###################");

        labelID.setText("ID de cabina:");

        labelNuevoUsuario.setText("¿Crear nueva solicitud de servicio?");

        javax.swing.GroupLayout centerDialogLayout = new javax.swing.GroupLayout(centerDialog);
        centerDialog.setLayout(centerDialogLayout);
        centerDialogLayout.setHorizontalGroup(
            centerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerDialogLayout.createSequentialGroup()
                .addGroup(centerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelNuevoUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(centerDialogLayout.createSequentialGroup()
                        .addComponent(labelID, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(IDNUsuarioLabel)
                        .addGap(0, 13, Short.MAX_VALUE)))
                .addContainerGap())
        );
        centerDialogLayout.setVerticalGroup(
            centerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerDialogLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(labelNuevoUsuario)
                .addGap(18, 18, 18)
                .addGroup(centerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelID)
                    .addComponent(IDNUsuarioLabel))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        confirmCreate.getContentPane().add(centerDialog, java.awt.BorderLayout.CENTER);

        botDialog.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        AceptarBDialogo.setText("Aceptar");
        AceptarBDialogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botDialog.add(AceptarBDialogo);

        CancelarBDialogo.setText("Cancelar");
        CancelarBDialogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botDialog.add(CancelarBDialogo);

        confirmCreate.getContentPane().add(botDialog, java.awt.BorderLayout.SOUTH);

        confirmPrint.setSize(new java.awt.Dimension(260, 91));

        jLabel8.setText("¿Desea imprimir la factura?");

        printButton.setText("Imprimir");
        printButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        printButton.setFocusPainted(false);
        printButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        printButton.setMaximumSize(new java.awt.Dimension(10000, 10000));
        printButton.setMinimumSize(new java.awt.Dimension(0, 0));

        jButton1.setText("Cancelar");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jButton1)
        );

        javax.swing.GroupLayout confirmPrintLayout = new javax.swing.GroupLayout(confirmPrint.getContentPane());
        confirmPrint.getContentPane().setLayout(confirmPrintLayout);
        confirmPrintLayout.setHorizontalGroup(
            confirmPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(confirmPrintLayout.createSequentialGroup()
                .addGroup(confirmPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(confirmPrintLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6))
        );
        confirmPrintLayout.setVerticalGroup(
            confirmPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(confirmPrintLayout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setMaximumSize(new java.awt.Dimension(2147483647, 1000));
        setMinimumSize(new java.awt.Dimension(800, 400));
        setPreferredSize(new java.awt.Dimension(800, 520));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        ExceptionField.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        ExceptionField.setForeground(new java.awt.Color(255, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(18, 0, 18, 0);
        jPanel1.add(ExceptionField, gridBagConstraints);

        jLabel4.setText("Añadir Prendas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel2.setText("Género");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 14, 8, 5);
        jPanel1.add(jLabel2, gridBagConstraints);

        GenderBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                GenderBoxItemStateChanged(evt);
            }
        });
        GenderBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                GenderBoxFocusGained(evt);
            }
        });
        GenderBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenderBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 53;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        jPanel1.add(GenderBox, gridBagConstraints);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(456, 300));

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Género", "Nombre", "Servicio", "Doblado", "Express", "Cantidad", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        requestTable.getTableHeader().setReorderingAllowed(false);
        requestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requestTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(requestTable);
        if (requestTable.getColumnModel().getColumnCount() > 0) {
            requestTable.getColumnModel().getColumn(0).setResizable(false);
            requestTable.getColumnModel().getColumn(1).setResizable(false);
            requestTable.getColumnModel().getColumn(2).setResizable(false);
            requestTable.getColumnModel().getColumn(3).setResizable(false);
            requestTable.getColumnModel().getColumn(4).setResizable(false);
            requestTable.getColumnModel().getColumn(5).setResizable(false);
            requestTable.getColumnModel().getColumn(6).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 514;
        gridBagConstraints.ipady = 399;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 35, 14, 14);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        washChk.setText("Lavado");
        washChk.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                washChkStateChanged(evt);
            }
        });
        washChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                washChkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 14, 5, 5);
        jPanel1.add(washChk, gridBagConstraints);

        ironChk.setText("Planchado");
        ironChk.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ironChkStateChanged(evt);
            }
        });
        ironChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ironChkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 14, 5, 5);
        jPanel1.add(ironChk, gridBagConstraints);

        foldChk.setText("Doblado");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 14, 5, 5);
        jPanel1.add(foldChk, gridBagConstraints);

        clothL.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        clothL.setText("Prenda");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 14, 8, 5);
        jPanel1.add(clothL, gridBagConstraints);

        ClothBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ClothBoxItemStateChanged(evt);
            }
        });
        ClothBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ClothBoxFocusGained(evt);
            }
        });
        ClothBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClothBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 53;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        jPanel1.add(ClothBox, gridBagConstraints);

        AddB.setText("Agregar");
        AddB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 5);
        jPanel1.add(AddB, gridBagConstraints);

        CancelB.setText("Cancelar");
        CancelB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel1.add(CancelB, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel3.setText("Cantidad");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 14, 8, 5);
        jPanel1.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 77;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        jPanel1.add(QuantityTF, gridBagConstraints);

        ironWashChk.setText("Lavado y planchado");
        ironWashChk.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ironWashChkStateChanged(evt);
            }
        });
        ironWashChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ironWashChkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 14, 5, 5);
        jPanel1.add(ironWashChk, gridBagConstraints);

        XpressChk.setText("Express");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 14, 5, 5);
        jPanel1.add(XpressChk, gridBagConstraints);

        add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setMaximumSize(new java.awt.Dimension(32767, 100));
        jPanel2.setPreferredSize(new java.awt.Dimension(837, 40));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        createRequestBtn.setText("Crear Solicitud");
        createRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createRequestBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        jPanel2.add(createRequestBtn, gridBagConstraints);

        cancelRequest.setText("Cancelar");
        cancelRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelRequestActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        jPanel2.add(cancelRequest, gridBagConstraints);

        jLabel1.setText("Id de cabina");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel2.add(jLabel1, gridBagConstraints);

        CabinTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CabinTFKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel2.add(CabinTF, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel5.setText("Total");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        jPanel2.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        jPanel2.add(totalLbl, gridBagConstraints);

        add(jPanel2, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents


    private void GenderBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_GenderBoxItemStateChanged

    }//GEN-LAST:event_GenderBoxItemStateChanged

    private void GenderBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_GenderBoxFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_GenderBoxFocusGained

    private void GenderBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenderBoxActionPerformed

    }//GEN-LAST:event_GenderBoxActionPerformed

    private void washChkStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_washChkStateChanged

    }//GEN-LAST:event_washChkStateChanged

    private void washChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_washChkActionPerformed
        if (washChk.isSelected()) {
            ironWashChk.setEnabled(false);
            ironChk.setEnabled(false);
        } else {
            ironWashChk.setEnabled(true);
            ironChk.setEnabled(true);
        }
    }//GEN-LAST:event_washChkActionPerformed

    private void ironChkStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ironChkStateChanged

    }//GEN-LAST:event_ironChkStateChanged

    private void ironChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ironChkActionPerformed
        if (ironChk.isSelected()) {
            ironWashChk.setEnabled(false);
            washChk.setEnabled(false);
        } else {
            washChk.setEnabled(true);
            ironWashChk.setEnabled(true);
        }
    }//GEN-LAST:event_ironChkActionPerformed

    private void ClothBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ClothBoxItemStateChanged
        Article article = new Article();
        String a, b;
        int c;
        if (ClothBox.getSelectedIndex() > 0) {
            a = (String) ClothBox.getSelectedItem();
            b = (String) GenderBox.getSelectedItem();
            article.setGender(b);
            article.setClothName(a);
            c = daoT.findID(article);
            article = daoT.read(c);
            foldChk.setSelected(false);
            foldChk.setEnabled(article.getFold());
        }// TODO add your handling code here:
    }//GEN-LAST:event_ClothBoxItemStateChanged

    private void ClothBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ClothBoxFocusGained

    }//GEN-LAST:event_ClothBoxFocusGained

    private void ClothBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClothBoxActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_ClothBoxActionPerformed

    private void AddBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBActionPerformed
        String articleName, articleGender;
        int articleId, quantity;

        String exception = FormUtils.validateField(GenderBox, ClothBox, QuantityTF);
        if (exception.equals("")) {
            artR = new ArticleRequest();
            art = new Article();

            double price = 0.0;

            articleName = (String) ClothBox.getSelectedItem();
            articleGender = (String) GenderBox.getSelectedItem();

            art.setClothName(articleName);
            art.setGender(articleGender);

            articleId = daoT.findID(art);
            art = daoT.read(articleId);

            artR.setArticle(art);

            quantity = Integer.parseInt(QuantityTF.getText());

            artR.setQuantity(quantity);

            if (washChk.isSelected()) {
                price = art.getWashPrice();
                artR.setService("Lavado");
            } else if (ironChk.isSelected()) {
                price = art.getIronPrice();
                artR.setService("Planchado");
            } else if (ironWashChk.isSelected()) {
                price = art.getWaiPrice();
                artR.setService("Lavado y Planchado");
            } else {
                exception = "Por favor seleccione un servicio";
            }
            if (exception.equals("")) {
                artR.setSubtotal(quantity * price);
                if (XpressChk.isSelected()) {
                    artR.setExpress(true);
                    price *= 1.5;
                    artR.setSubtotal(quantity * price);
                } else {
                    artR.setSubtotal(quantity * price);
                }

                if (editMode) {
                    if (superEditMode) {
                        artR.setId(editArticleRequest.getId());
                    } else {
                        artR.setTempId(editArticleRequest.getTempId());
                    }
                    partialTotal -= editArticleRequest.getSubtotal();
                    articleRequestsSet.remove(editArticleRequest);
                } else {
                    artR.setTempId(articleRequestsSet.size() + 1);
                }
                partialTotal += artR.getSubtotal();
                NumberFormat formatter = NumberFormat.getCurrencyInstance(Locale.US);
                totalLbl.setText(String.valueOf(formatter.format(partialTotal)));
                artR.setFold(foldChk.isSelected());

                articleRequestsSet.add(artR);

                TableUtils.fillTableArticleRequest(requestTable, new ArrayList<>(articleRequestsSet));
                FormUtils.clearFields(GenderBox, ClothBox, QuantityTF, washChk, ironChk, ironWashChk, foldChk, XpressChk);
                if (articleRequestsSet.size() > 0 && !CabinTF.getText().isEmpty()) {
                    createRequestBtn.setEnabled(true);
                }
                editMode = false;
                FormUtils.enableComponents(washChk, ironChk, ironWashChk, foldChk);
            }else{
                ExceptionField.setText(exception);
            }
        } else {
            ExceptionField.setText(exception);
        }
    }//GEN-LAST:event_AddBActionPerformed

    private void ironWashChkStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ironWashChkStateChanged

    }//GEN-LAST:event_ironWashChkStateChanged

    private void ironWashChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ironWashChkActionPerformed
        if (ironWashChk.isSelected()) {
            washChk.setEnabled(false);
            ironChk.setEnabled(false);
        } else {
            washChk.setEnabled(true);
            ironChk.setEnabled(true);
        }
    }//GEN-LAST:event_ironWashChkActionPerformed

    private void createRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createRequestBtnActionPerformed
        cabin = new Cabin();
        request = superEditMode ? daoR.read(editRequest.getId()) : new Request();
        Cabin cab = daoC.read(Integer.parseInt(CabinTF.getText()));
        if (cab == null) {
            cabin.setId(Integer.parseInt(CabinTF.getText()));
            daoC.create(cabin);
        } else {
            cabin.setId(cab.getId());
        }
        request.setCabin(cabin);
        request.setCreated_at(new Date(System.currentTimeMillis()));
        double total = articleRequestsSet.stream().mapToDouble(ar -> ar.getSubtotal()).sum();
        request.setTotal(total);
        request.setArticleSet(articleRequestsSet);
        articleRequestsSet.forEach((ar) -> {
            ar.setRequest(request);
        });
        if (superEditMode) {
            daoR.update(request);
        } else {
            daoR.create(request);
        }
        FormUtils.clearFields(CabinTF, GenderBox, ClothBox, QuantityTF, washChk, ironChk, ironWashChk, foldChk, XpressChk);
        articleRequestsSet.clear();
        TableUtils.clearTable(requestTable);
        FormUtils.enableComponents(washChk, ironChk, ironWashChk, foldChk);
        editMode = false;
        partialTotal = 0;
        totalLbl.setText("$0.0");
    }//GEN-LAST:event_createRequestBtnActionPerformed

    private void cancelRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelRequestActionPerformed
        FormUtils.clearFields(CabinTF, GenderBox, ClothBox, QuantityTF, washChk, ironChk, ironWashChk, foldChk, XpressChk);
        articleRequestsSet.clear();
        TableUtils.clearTable(requestTable);
        FormUtils.enableComponents(washChk, ironChk, ironWashChk, foldChk);

    }//GEN-LAST:event_cancelRequestActionPerformed

    private void CabinTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CabinTFKeyTyped
        if (articleRequestsSet.size() > 0) {
            createRequestBtn.setEnabled(true);
        }
    }//GEN-LAST:event_CabinTFKeyTyped

    private void requestTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestTableMouseClicked
        ViewRequestsControl.TableClicked(GenderBox, ClothBox, QuantityTF, washChk, ironChk, ironWashChk, foldChk, XpressChk, requestTable);
        AddB.setText("Editar");
        editMode = true;
        if (superEditMode) {
            editArticleRequest = daoAR.read((Integer) requestTable.getValueAt(requestTable.getSelectedRow(), 0));
        } else {
            int row = requestTable.getSelectedRow();
            editArticleRequest = articleRequestsSet.stream().filter(ar -> ar.getTempId() == row + 1).findFirst().get();
        }
    }//GEN-LAST:event_requestTableMouseClicked

    private void CancelBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBActionPerformed
        FormUtils.clearFields(GenderBox, ClothBox, QuantityTF, washChk, ironChk, ironWashChk, foldChk, XpressChk);
        requestTable.clearSelection();
        if (editMode) {
            AddB.setText("Agregar");
        }
        editMode = false;
    }//GEN-LAST:event_CancelBActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AceptarBDialogo;
    private javax.swing.JButton AddB;
    private javax.swing.JTextField CabinTF;
    private javax.swing.JButton CancelB;
    private javax.swing.JButton CancelarBDialogo;
    private javax.swing.JComboBox<String> ClothBox;
    private javax.swing.JLabel ExceptionField;
    private javax.swing.JComboBox<String> GenderBox;
    private javax.swing.JLabel IDNUsuarioLabel;
    private javax.swing.JTextField QuantityTF;
    private javax.swing.JCheckBox XpressChk;
    private javax.swing.JPanel botDialog;
    private javax.swing.JButton cancelPrintButton;
    private javax.swing.JButton cancelRequest;
    private javax.swing.JPanel centerDialog;
    private javax.swing.JLabel clothL;
    private javax.swing.JDialog confirmCreate;
    private javax.swing.JDialog confirmPrint;
    private javax.swing.JButton createRequestBtn;
    private javax.swing.JCheckBox foldChk;
    private javax.swing.JCheckBox ironChk;
    private javax.swing.JCheckBox ironWashChk;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelID;
    private javax.swing.JLabel labelNuevoUsuario;
    private javax.swing.JButton printButton;
    private javax.swing.JTable requestTable;
    private javax.swing.JDialog saveConfirmationDialog;
    private javax.swing.JFileChooser saveFileChooser;
    private javax.swing.JButton savePrintButton;
    private javax.swing.JPanel topDialog;
    private javax.swing.JLabel totalLbl;
    private javax.swing.JCheckBox washChk;
    // End of variables declaration//GEN-END:variables
}
